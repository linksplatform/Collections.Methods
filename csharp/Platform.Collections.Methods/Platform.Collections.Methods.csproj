<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>LinksPlatform's Platform.Collections.Methods Class Library</Description>
    <Copyright>Konstantin Diachenko</Copyright>
    <AssemblyTitle>Platform.Collections.Methods</AssemblyTitle>
    <VersionPrefix>0.4.0</VersionPrefix>
    <Authors>Konstantin Diachenko</Authors>
    <TargetFrameworks>net472;netstandard2.0;netstandard2.1</TargetFrameworks>
    <AssemblyName>Platform.Collections.Methods</AssemblyName>
    <PackageId>Platform.Collections.Methods</PackageId>
    <PackageTags>LinksPlatform;Collections.Methods;CircularDoublyLinkedListMethods;DoublyLinkedListMethodsBase;OpenDoublyLinkedListMethods;RecursionlessSizeBalancedTreeMethods;SizeBalancedTreeMethods;SizedAndThreadedAVLBalancedTreeMethods;SizedBinaryTreeMethodsBase;GenericCollectionMethodsBase</PackageTags>
    <PackageIconUrl>https://raw.githubusercontent.com/linksplatform/Documentation/18469f4d033ee9a5b7b84caab9c585acab2ac519/doc/Avatar-rainbow-icon-64x64.png</PackageIconUrl>
    <PackageProjectUrl>https://linksplatform.github.io/Collections.Methods</PackageProjectUrl>
    <PackageLicenseExpression>LGPL-3.0-only</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>git://github.com/linksplatform/Collections.Methods</RepositoryUrl>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <LangVersion>latest</LangVersion>
    <PackageReleaseNotes>Platform.Numbers dependency updated from 0.4.0 to 0.4.1. 
DoublyLinkedLists split into two implementations absolute and relative.
Absolute implementation means there is a single global list with fixed location (can be decided on initialization).
Relative implementation means there are many lists and each is relative to some element's location (must be decided on each read/write operation).</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('net4')) AND '$(MSBuildRuntimeType)' == 'Core' AND '$(OS)' != 'Windows_NT'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.1" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Platform.Numbers" Version="0.4.1" />
  </ItemGroup>

  <ItemGroup Condition="'$(OS)' == 'Windows_NT' AND $(TargetFramework) == 'netstandard2.1'">
    <CSharpFiles Include="**\*.cs" />
  </ItemGroup>

  <Target Name="CSharpToCppTranslation" AfterTargets="PostBuildEvent" Condition="'$(OS)' == 'Windows_NT' AND $(TargetFramework) == 'netstandard2.1'">
    <Exec Command="..\..\CSharpToCppTranslator\bin\$(Configuration)\netcoreapp3.0\CSharpToCppTranslator.exe $(ProjectDir) $(SolutionDir)cpp\$(ProjectName)\"></Exec>
  </Target>

</Project>
